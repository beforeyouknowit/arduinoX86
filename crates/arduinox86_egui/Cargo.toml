[package]
name = "arduinox86_egui"
version = "0.1.0"
authors = ["Daniel Balsom"]
edition = "2021"
include = ["LICENSE", "**/*.rs", "Cargo.toml"]
rust-version = "1.81"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-pc-windows-msvc", "x86_64-unknown-linux-gnu"]

[dependencies]
egui = "0.31"
eframe = { version = "0.31", default-features = false, features = [
    "accesskit", # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow", # Use the glow rendering backend. Alternative: "wgpu".
    "persistence", # Enable restoring app state when restarting the app.
    "wayland", # To support Linux (and CI)
] }
log = "0.4"

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }
env_logger = "0.11"
serialport = "4.2"


[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
